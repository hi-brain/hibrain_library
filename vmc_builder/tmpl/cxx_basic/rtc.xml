<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<rtc:RtcProfile rtc:version="0.2" rtc:id="RTC:VenderName:Category:ModuleName:1.0.0" xmlns:rtcExt="http://www.openrtp.org/namespaces/rtc_ext" xmlns:rtcDoc="http://www.openrtp.org/namespaces/rtc_doc" xmlns:rtc="http://www.openrtp.org/namespaces/rtc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <rtc:BasicInfo xsi:type="rtcExt:basic_info_ext" rtcExt:saveProject="{{ profile['BasicInfo']['name'] }}" rtc:updateDate="{{ profile['BasicInfo']['updateDate'] }}" rtc:creationDate="{{ profile['BasicInfo']['creationDate'] }}" rtc:version="{{ profile['BasicInfo']['version'] }}" rtc:vendor="{{ profile['BasicInfo']['vendor'] }}" rtc:maxInstances="{{ profile['BasicInfo']['maxInstances'] }}" rtc:executionType="{{ profile['BasicInfo']['executionType'] }}" rtc:executionRate="{{ profile['BasicInfo']['executionRate'] }}" rtc:description="{{ profile['BasicInfo']['description'] }}" rtc:category="{{ profile['BasicInfo']['category'] }}" rtc:componentKind="{{ profile['BasicInfo']['componentKind'] }}" rtc:activityType="{{ profile['BasicInfo']['activityType'] }}" rtc:componentType="{{ profile['BasicInfo']['componentType'] }}" rtc:name="{{ profile['BasicInfo']['name'] }}">
        <rtcExt:VersionUpLogs></rtcExt:VersionUpLogs>
    </rtc:BasicInfo>
    <rtc:Actions>
        <rtc:OnInitialize xsi:type="rtcDoc:action_status_doc" rtc:implemented="{{ profile['Actions']['OnInitialize'] }}"/>
        <rtc:OnFinalize xsi:type="rtcDoc:action_status_doc" rtc:implemented="{{ profile['Actions']['OnFinalize'] }}"/>
        <rtc:OnStartup xsi:type="rtcDoc:action_status_doc" rtc:implemented="{{ profile['Actions']['OnStartup'] }}"/>
        <rtc:OnShutdown xsi:type="rtcDoc:action_status_doc" rtc:implemented="{{ profile['Actions']['OnShutdown'] }}"/>
        <rtc:OnActivated xsi:type="rtcDoc:action_status_doc" rtc:implemented="{{ profile['Actions']['OnActivated'] }}"/>
        <rtc:OnDeactivated xsi:type="rtcDoc:action_status_doc" rtc:implemented="{{ profile['Actions']['OnDeactivated'] }}"/>
        <rtc:OnAborting xsi:type="rtcDoc:action_status_doc" rtc:implemented="{{ profile['Actions']['OnAborting'] }}"/>
        <rtc:OnError xsi:type="rtcDoc:action_status_doc" rtc:implemented="{{ profile['Actions']['OnError'] }}"/>
        <rtc:OnReset xsi:type="rtcDoc:action_status_doc" rtc:implemented="{{ profile['Actions']['OnReset'] }}"/>
        <rtc:OnExecute xsi:type="rtcDoc:action_status_doc" rtc:implemented="{{ profile['Actions']['OnExecute'] }}"/>
        <rtc:OnStateUpdate xsi:type="rtcDoc:action_status_doc" rtc:implemented="{{ profile['Actions']['OnStateUpdate'] }}"/>
        <rtc:OnRateChanged xsi:type="rtcDoc:action_status_doc" rtc:implemented="{{ profile['Actions']['OnRateChanged'] }}"/>
        <rtc:OnAction xsi:type="rtcDoc:action_status_doc" rtc:implemented="{{ profile['Actions']['OnAction'] }}"/>
        <rtc:OnModeChanged xsi:type="rtcDoc:action_status_doc" rtc:implemented="{{ profile['Actions']['OnModeChanged'] }}"/>
    </rtc:Actions>
    <rtc:ConfigurationSet>
{%- for name, ary in profile["ConfigurationSet"].items() %}
        <rtc:Configuration xsi:type="rtcExt:configuration_ext" rtcExt:variableName="{{ ary['variableName'] }}" rtc:unit="{{ ary['unit'] }}" rtc:defaultValue="{{ ary['defaultValue'] }}" rtc:type="{{ ary['type'] }}" rtc:name="{{ name }}">
            <rtc:Constraint>
    {%- if ary["constraint"]['type'] == "hash" %}
                <rtc:ConstraintHashType>
		{%- for name2, ary2 in ary["constraint"]["constraint"].items() %}
                    <rtc:Constraint>
                        <rtc:ConstraintUnitType rtc:key="{{ name2 }}">
                            <rtc:propertyIsEqualTo rtc:matchCase="{{ ary2['matchCase'] }}">
                                <rtc:Literal>{{ ary2['literal'] }}</rtc:Literal>
                            </rtc:propertyIsEqualTo>
                        </rtc:ConstraintUnitType>
                    </rtc:Constraint>
		{%- endfor %}
                </rtc:ConstraintHashType>
    {%- endif %}
            </rtc:Constraint>
            <rtcExt:Properties rtcExt:value="{{ ary['widget'] }}" rtcExt:name="__widget__"/>
        </rtc:Configuration>
{%- endfor %}
    </rtc:ConfigurationSet>
{%- for name, ary in profile["Dataports"].items() %}
    <rtc:DataPorts xsi:type="rtcExt:dataport_ext" rtcExt:position="{{ ary['position'] }}" rtcExt:variableName="{{ ary['variableName'] }}" rtc:unit="{{ ary['unit'] }}" rtc:subscriptionType="" rtc:dataflowType="" rtc:interfaceType="" rtc:idlFile="" rtc:type="{{ ary['type'] }}" rtc:name="{{ name }}" rtc:portType="DataInPort"/>
{%- endfor %}
    <rtc:Language xsi:type="rtcExt:language_ext" rtc:kind="{{ profile['lang'] }}"/>
</rtc:RtcProfile>
